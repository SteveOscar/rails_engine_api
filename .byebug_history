exit
item.invoices.successful.group('"invoices"."created_at"').sum('quantity')
exit
Item.count
exit
Item.count
exit
result.first[:merchant]
result.first
result.class
result.sort_by { |k, v| -v }
result.sort_by { |pair| -pair.last }
result.first.values
result.first.keys
result.first.class
result.first.key
result.first
result.sort_by { |k, v| -v }.map(&:first).first(quantity)
result
exit
result
exit
merchant.invoices.joins(:invoice_items).sum("quantity * unit_price").to_f
merchant.invoices.joins(:invoice_items).sum("quantity * unit_price")
exit
merchant.invoices.joins(:invoice_items).sum("quantity * unit_price")
exit
InvoiceItem.last.unit_price.to_f
exit
InvoiceItem.last.unit_price.to_f
InvoiceItem.last.unit_price.to_i
InvoiceItem.last.unit_price
exit
InvoiceItem.last.unit_price
InvoiceItem.last.unit_price + 1
InvoiceItem.last.unit_price
InvoiceItem.last
InvoiceItem.last.update(unit_price: (price.to_i.to_f / 100))
price.to_i.to_f / 100
price.to_i / 100
price.to_i.to_f
price.to_i
price
exit
row
InvoiceItem.last
price
exit
InvoiceItem.joins(:invoice).where('invoices.merchant_id = ?', 1).sum(:invoice_id)
InvoiceItem.joins(:invoice).where('invoices.merchant_id = ?', 1).sum(:unit_price)
InvoiceItem.joins(:invoice).where('invoices.merchant_id = ?', 1).sum(:invoice_id)
InvoiceItem.joins(:invoice).where('invoices.merchant_id = ?', 1)
InvoiceItem.joins(:invoice).where(merchand_id: 1)
InvoiceItem.where(merchand_id: 1)
InvoiceItem.first
Merchant.first.invoices.first
Merchant.first.invoices
Merchant.first
Invoice.first.invoice_items.sum(unit_price)
Invoice.first.invoice_items
Invoice.first.invoice_items.collect{|i| total+=i.invoice_item.unit_price.to_f}
Invoice.first.invoice_items
Invoice.first.invoice_items("SUM(unit_price.to_f)")
Invoice.first.invoice_items.sum(:total.to_i)
Invoice.first.invoice_items
Invoice.first.invoice_item
Invoice.first
Merchant.first
quantity
exit
Transaction.find(params[:id]).invoice
exit
InvoiceItem.find(params[:id]).item
InvoiceItem.find(params[:id]).invoice
InvoiceItem.find(params[:id])
params
exit
Item.joins(:invoice_items).where('invoice_items.invoice_id = ?', params[:id])
params[:id]
Item.joins(:invoice_items).where('invoice_items.invoice_id = ?', '#{params[:id]}')
  end
Item.joins(:invoice_items).where('invoice_items.invoice_id = ?', '#{params[:id]}')
Item.joins(:invoice_items).where('invoice_items.invoice_id = ?', 524)
Item.joins(InvoiceItem.where(item_id: 524))
InvoiceItem.where(item_id: 524)
Item.joins(:invoice_items).where(item_id: 524)
Item.joins(Invoice.first.invoice_items.where(item_id: 534))
Invoice.first.invoice_items.where(item_id: 534)
Invoice.first.invoice_items.where(item_id: 534)]
Invoice.first.invoice_items
Invoice.first
Invoice.first.items
Invoice.first
Item.first.invoice_items
Item.InvoiceItems
Item.invoice_items
InvoiceItem.find(1).item
InvoiceItem.find(1)
Item.joins(:invoice_items).where(invoice_id: 23)
Item.joins(:invoice_items).where(invoice_id: 5)
Item.joins(:invoice_items).where(invoice_id: 1)
InvoiceItem.first
Invoice.first
Item.)
Item.count
Item.joins(:invoice_items).count
Item.joins(:invoice_items)
Invoice.first.invoice_items.first.item
Invoice.first.invoice_items.items
Invoice.first.invoice_items
Invoice.first.item
Invoice.first.items
Invoice.first
Item.first.invoice_items.first.item
Item.first.invoice_items.first
Item.first.invoice_items.items
Item.first.invoice_items
Item.first.invoices
Item.first
Item.joins(:invoice_items).where(invoice_id: params['id'])
Item.first.invoice_items
Item.first
Item.first.invoices
params
invoice = InvoiceItem.where(invoice_id LIKE '#{params[:id]}')
invoice.first.item_id
invoice.item_id
invoice
invoice.item_id
invoice = InvoiceItem.where(id: params[:id])
invoice = Invoice.where(id: params[:id])
Invoice.where(id: params[:id])
exit
Transaction.where(invoice_id: params['id'])
params
exit
expect(result).to eq(Item.last.name)
Item.last.name
Item.last
result
item
exit
response.body
result
exit
Item.first.updated_at
Item.find_by(updated_at: DateTime.parse(params[:updated_at]))
DateTime.parse(params[:updated_at])
exit
InvoiceItem.find_by(unit_price: params[:unit_price])
InvoiceItem.last.unit_price
exit
InvoiceItem.first.unit_price
exit
InvoiceItem.first.unit_price
InvoiceItem.first
exit
Invoice.where(customer_id: params[:customer_id])
Invoice.where("invoices.customer_id LIKE '#{params[:customer_id]}'")
params
exit
Item.last
Item.last.update(unit_price: "343.23")
Item.last.unit_price
Item.last.unit_price = price.insert(-3, '.')
price.insert(-3, '.')
price = Item.last.unit_price
price.insert(-3, '.')
price.insert(-2, '.')
price.insert(-2, .)
price = Item.last.unit_price
Item.last.unit_price
Item.last
continue
Transaction.find_by(created_at: DateTime.parse(params[:created_at]))
exit
response.body.nil?
response.body
expect(response.body).not_to be_empty
xpect(response.body).not_to be_empty
exit
JSON.parse(response.body).count
JSON.parse(response.body)
response.body.count
response.body
exit
Merchant.all
Merchant.al
response.body
response
exit
response.body
exit
JSON.parse(response.body)["name"]
JSON.parse(response.body).name
JSON.parse(response.body)
Merchant.all
response.body
