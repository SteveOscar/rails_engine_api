exit
Item.first.updated_at
Item.find_by(updated_at: DateTime.parse(params[:updated_at]))
DateTime.parse(params[:updated_at])
exit
InvoiceItem.find_by(unit_price: params[:unit_price])
InvoiceItem.last.unit_price
exit
InvoiceItem.first.unit_price
exit
InvoiceItem.first.unit_price
InvoiceItem.first
exit
Invoice.where(customer_id: params[:customer_id])
Invoice.where("invoices.customer_id LIKE '#{params[:customer_id]}'")
params
exit
Item.last
Item.last.update(unit_price: "343.23")
Item.last.unit_price
Item.last.unit_price = price.insert(-3, '.')
price.insert(-3, '.')
price = Item.last.unit_price
price.insert(-3, '.')
price.insert(-2, '.')
price.insert(-2, .)
price = Item.last.unit_price
Item.last.unit_price
Item.last
continue
Transaction.find_by(created_at: DateTime.parse(params[:created_at]))
exit
response.body.nil?
response.body
expect(response.body).not_to be_empty
xpect(response.body).not_to be_empty
exit
JSON.parse(response.body).count
JSON.parse(response.body)
response.body.count
response.body
exit
Merchant.all
Merchant.al
response.body
response
exit
response.body
exit
JSON.parse(response.body)["name"]
JSON.parse(response.body).name
JSON.parse(response.body)
Merchant.all
response.body
